package sg.edu.nus.iss.club;

import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

import sg.edu.nus.iss.club.gui.ClubFileStore;

public class Club {

	//private int array_size_increment;
	//private int numMembers;
	private int count=1;
	
	private ArrayList<Member> members=new ArrayList<Member>();
	private ArrayList<Facility> fac=new ArrayList<Facility>();
	private ArrayList<Booking> bookings =new ArrayList<Booking>();
	
	HashMap<String,Facility> facility = new HashMap<String,Facility>();
	
	ClubFileStore clubstore;
	
	BookingRegister br1 = new BookingRegister();
	
	public Club(String fn1,String fn2,String fn3) throws IOException, BadBookingException, ParseException{
		clubstore = new ClubFileStore(this,fn1,fn2,fn3);
		retClubStore();
	}
	
	public void retClubStore() throws IOException, BadBookingException, ParseException{
		members = clubstore.retrieveMembers();
		if(members != null){
			int size = members.size();
			count = members.get(size-1).getMemberNumber()+1;
		}
		System.out.println("members show: "+members);
		
		fac = clubstore.retrieveFacility();
		for(int k =0;k<fac.size();k++){
			facility.put(fac.get(k).getName(), fac.get(k));
		}
		
		bookings = clubstore.retrieveBooking();
		for(int j=0;j<bookings.size();j++){
			Member m = bookings.get(j).getMember();
			Facility f = bookings.get(j).getFacility();
			System.out.println("Whats the error? "+m.getMemberNumber());
			Date sd = bookings.get(j).getStartDate();
			Date ed = bookings.get(j).getEndDate();
			br1.addBooking(m, f, sd, ed);
		}
		for(int i=0;i<fac.size();i++){
			facility.put(fac.get(i).getName(), fac.get(i));
		}
		
	}
	
	public void addMember(String surname,String firstName,String secondName) throws IOException{
		Member m = new Member(surname,firstName,secondName,count);
		members.add(m);
		clubstore.storeMembers(members);
		count++;
		//System.out.println("Members "+members);
	}

	public ArrayList<Member> getMembers(){
		//System.out.println("Inside club class "+members);
		return members;
	}
		
	public void showMembers(){
		System.out.println("Members of the club::\n");
		for(int i=0;i<members.size();i++){
			System.out.println(members.get(i)+"\n");
			}
	}
	
	public Member getMember(int memberNum){
		for(int i=0;i<members.size();i++){
			if(members.get(i).memberNumber==memberNum){
				return members.get(i);
				}
			}
		return null;
	}
	
	public void removeMember(int memberNum) throws IOException{
		int found_flag=0;
		int found_id = 0;
		for(int i=0;i<members.size();i++){
			if(members.get(i).memberNumber==memberNum){
				found_flag++;
				found_id = i;
			}
		}
		if(found_flag==1){
			System.out.println("Removing member with id: "+memberNum);
			members.remove(found_id);
			System.out.println("...Removed!!");
			}
		else{
			System.out.println("Member with given id "+memberNum +" is not present");
		}	
		clubstore.storeMembers(members);
	}
	
    public void listOfFacilites(Facility f){
    	facility.put(f.getName(),f);	
    }
    
    public void addFacility(String name,String desc) throws IOException{
    	Facility f = new Facility(name,desc);
		fac.add(f);
		listOfFacilites(f);
		clubstore.storeFacilities(fac);
    }
    
    public Facility getFacility(String name){
    	System.out.println("Print fname: "+name);
    	Facility f = facility.get(name);
    	System.out.println("Print fac name "+f.getName());
    	return f;	
    }
    
    public HashMap<String,Facility> getFacilities(){
    	return facility;  	
    }
    
    public ArrayList<Facility> getFacilityList(){
    	return fac;  	
    }
    
    public void removeFacility(String name) throws IOException{
		facility.remove(name);	
		for(int i=0;i<fac.size();i++){
			if(fac.get(i).getName().equals(name)){
				fac.remove(i);
			}
		}
		clubstore.storeFacilities(fac);
	}
    
    public void showFacilities(){
    	System.out.println("List of all Facilities:");
		for (Facility f : fac){
			System.out.println(f+"\n");
		}
	}
    
	public void addBooking(int memNum,String fName,Date sd, Date ed) throws BadBookingException, IOException{
		Member mem = getMember(memNum);
		Facility fac = getFacility(fName);
		Booking b = br1.addBooking(mem, fac, sd, ed);
		bookings.add(b);
		System.out.println("f added: "+b.toString());
		System.out.println("f added: "+b.getFacility().getName());
		clubstore.storeBookings(bookings);
		
	}
	
	public void removeBooking(Booking b) throws IOException{
		br1.removeBooking(b);
		bookings.remove(b);
		clubstore.storeBookings(bookings);
	}
	
	public ArrayList<Booking> getBookings(String fName,Date sd,Date ed){
		Facility fac = getFacility(fName);
		return br1.getBookings(fac, sd, ed);
	}
	
	public void showBookings(String fName,Date sd,Date ed){
		Facility fac = getFacility(fName);
		ArrayList<Booking> bookings = br1.getBookings(fac, sd, ed);
		for(Booking b : bookings){
			b.show();
		}
	}

}
